@mixin blur($px: 5) {
    filter: url(url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' ><filter id='blur5'><feGaussianBlur in='SourceGraphic' stdDeviation='#{$px}' /></filter></svg>#blur5"));

    filter: blur(#{$px}px);
}

@mixin desaturate($val: 100) {
    $ie: 100 - $val;
    filter:url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' ><filter id='gray'><feColorMatrix in='SourceGraphic' type='saturate' values='#{$ie}' /></filter></svg>#gray");
    filter: grayscale($val);
}

@mixin brightness($val: 125) {
    $ie: $val / 100;

    filter:url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' ><filter id='brighten'><feComponentTransfer><feFuncR type='linear' slope='#{$ie}'/><feFuncG type='linear' slope='#{$ie}' /><feFuncB type='linear' slope='#{$ie}' /></feComponentTransfer></filter></svg>#brighten");

    filter:brightness("#{$val}%");
}

@mixin contrast($val: 125) {
    $ie: $val / 100;

    filter:url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' ><filter id='contrast125'><feComponentTransfer><feFuncR type='linear' slope='#{$ie}' intercept='-0.125'/><feFuncG type='linear' slope='#{$ie}' intercept='-0.125'/><feFuncB type='linear' slope='#{$ie}' intercept='-0.125'/></feComponentTransfer></filter></svg>#contrast125");

    filter:contrast("#{$val}%");
}

@mixin huerotate($deg: 30) {
    filter:url("data:image/svg+xml;utf8,<svg xmlns='http://www.w3.org/2000/svg' ><filter id='huerotate'><feColorMatrix type='hueRotate' values='#{$deg}' /></filter></svg>#huerotate");

    filter: hue-rotate($deg * 1deg);
}
